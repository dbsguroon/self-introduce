hegiht 값과 비슷한 padding-top으로 줄수 있다.

padding-top은 부모의 넓이를 기준으로
높이를 잡게되는 기술임

사람들이 많이쓰는 모니터 화면 비율인 16:9 를 % 만들기

9/16 * 100 = 56.25%;

----------------------------------------------------------

background-size:cover;

cover : 배경화면을 꽉채우면서 가로세로의 비율을 유지

-------------------------------------------------------

%를 주게되면 부모의 너비기준이 된다는걸 알고 쓰자.

em과 rem의 가장 큰 차이점은 기준이 무엇이냐는 것이다. 
em은 상위 엘리먼트의 폰트 사이즈가 기준이고, 
rem은 루트 엘리먼트(html)의 폰트 사이즈가 기준이 된다

----------------------------------------------------------

font-size: 30px;
line-height: 1;

line-height 1의의미는 30px이됨 
즉 line-height 는 한줄의 높이를 의미한다.

-------------------------------------------------------------

ul li 부분의 마진 top 을 통해 글자를 이동하면
밑에 구조 에도 영향을 미치게 된다.
그렇기 떄문에 margin-top 을 쓰기보다는 
div로 묶어서 그안에서 움직이게 해주어야한다.

-----------------------------------------------------------

부모와 자식의 구조에서

부모의 font-size가  15px이라고하고

자식이  height든 padding 이든  em 단위를 쓴다면
부모의 font-size 15px 기준으로 계산을 하면된다.

ex) 자식의 height 가 1.5em 이면
    15 * 1.5= 22.5 가 높이가된다.

--------------------------------------------------------

글자가 겹쳤을떄 position relative를 주게되면 z-index를 안주더라도
글자가 더 튀어나와있다.

---------------------------------------------------------


/* offset-x | offset-y | blur-radius | spread-radius | color */
box-shadow: inset 0 0 10px 10px #111;

spread-radius 는 그림자의 진한정도
blur-radius 는 그림자가 퍼져나가는정도


----------------------------------------------------------

<li data-score="100%"></li>

li에서 dat-score 지정한 값을 CSS 단에서 불러올수가 있다.

.graph li::before {
    content:attr(data-score);
    float: right;
}

가상요소를 만들어 content에 !를넣어보면  !가 li에 포함되어있다는 것을 알수가 있다.
float:right 로 오른쪽으로 보내버린다.
content에 ! 표대신에 attr(data-score) 를 넣어서
속성이름이 data-score의 값을 가지고 올수가 있다.


----------------------------------------------------------------------

https://cssgradient.io/ 이홈페이지가면 그라데이션 효과를 줄수있음

-------------------------------------------------------------------

ul>li 대신

<dl> <dt> <dd> 등도 쓸수있다.

dl : definition list의 약자
dt : definition term의 약자 용어의 제목
dd : definition description의 약자 용어의 설명

----------------------------------------------------------

bfc : block format context;
: 부모입장에서 어디까지의 자식을 감쌀수 있나
부모라고 모두 감쌀수 있는것이 아니고
블록 포맷 컨텍스트가 된 부모만이 감쌀수가 있다.

꼭부모가 아니라도 형제끼리도 블록 포맷컨텍스트 생성이가능


.list dd{
    overflow:hidden;
}

overflow:hidden 자체가 블록 포멧 컨텍스트를 형성한다.
즉 dt 와 dd 가분리되는 현상이 발생됨

블록포맷컨텍스트의 생성

1. float (float이 none이 아닌 요소)
2. 절대위치로 지정된 요소 (position이 absolute 또는 fixed인 요소)
3. 인라인블록 (display: inline-block 인 요소)
4. overflow가 visible이 아닌 요소
5. flex box (display: flex 또는 inline-flex인 요소)

----------------------------------------------------------------------

position:sticky;

Sticky 속성은 최초에 relative 속성처럼 동작하다가 스크롤이 
특정 지점에 도달하면 요소를 고정(fixed) 시킬 수 있습니다.

offset을 설정해주지 않으면 작동하지 않는다
높이값이 어느정도 존재해주어야 작동을 한다.

position: fixed 속성은 브라우저 화면의 상대 위치이다.
브라우저 화면을 기준으로 움직임

-----------------------------------------------------

vw  : 브라우저의 넓이를 기준으로함

vh : 브라우저의 높이를 기준으로함

ex) 50vw : viewport 기준에서 50%를뜻함
    100vh : viewport 기준에서 100%를뜻함



